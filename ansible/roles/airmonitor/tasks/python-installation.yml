---
- name: "python{{python_version}} runtime&build dependencies"
  become: yes
  apt: name={{item}}
  with_items:
    - build-essential
    - tk-dev
    - libncurses5-dev
    - libncursesw5-dev
    - libreadline6-dev
    - libdb5.3-dev
    - libgdbm-dev
    - libsqlite3-dev
    - libssl-dev
    - libbz2-dev
    - libexpat1-dev
    - liblzma-dev
    - zlib1g-dev
- name: "Download python{{python_version}}"
  get_url:
    url="https://www.python.org/ftp/python/{{python_version}}/Python-{{python_version}}.tar.xz"
    dest="/tmp/Python-{{python_version}}.tar.xz"
- name: "Unarchive python{{python_version}}"
  unarchive:
    src="/tmp/Python-{{python_version}}.tar.xz"
    dest="/tmp/"
    copy=no
    creates="/tmp/Python-{{python_version}}"
- name: "configure python{{python_version}} build"
  command: ./configure
  args:
    chdir: "/tmp/Python-{{python_version}}"
    creates: "/tmp/Python-{{python_version}}/Makefile"
- name: "build python{{python_version}}"
  # not using make module to be able to use -j and creates option to fully skip step
  command: make -j4
  args:
    chdir: "/tmp/Python-{{python_version}}"
    creates: "/tmp/Python-{{python_version}}/python"
- name: "install python{{python_version}}"
  become: yes
  make:
    chdir: "/tmp/Python-{{python_version}}"
    target: altinstall

- name: "Install pip modules"
  pip:
    name: "{{ item }}"
    executable: pip3
  with_items:
    - pyserial
    - smbus2
    - idna
    - certifi
    - chardet
    - requests
    - RPi.bme280
    - configparser